<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.qn.furnitue.mapper.OrdersMapper" >
  <resultMap id="BaseResultMap" type="com.qn.furnitue.model.Orders" >
    <constructor >
      <idArg column="coid" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="oid" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="oname" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="odealer" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="ophone" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="ordertime" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="odeliverytime" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="opartorder" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="oaddress" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="ologinname" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="oremark" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="cname" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="cphone" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="caddress" jdbcType="VARCHAR" javaType="java.lang.String" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List" >
    coid, oid, oname, odealer, ophone, ordertime, odeliverytime, opartorder, oaddress, 
    ologinname, oremark, cname, cphone, caddress
  </sql>
  <insert id="insertOrders" parameterType="com.qn.furnitue.model.Orders" >
    insert into orders (coid, oid, oname, 
      odealer, ophone, ordertime, 
      odeliverytime, opartorder, oaddress, 
      ologinname, oremark, cname, 
      cphone, caddress)
    values (#{coid,jdbcType=INTEGER}, #{oid,jdbcType=VARCHAR}, #{oname,jdbcType=VARCHAR}, 
      #{odealer,jdbcType=VARCHAR}, #{ophone,jdbcType=VARCHAR}, #{ordertime,jdbcType=VARCHAR}, 
      #{odeliverytime,jdbcType=VARCHAR}, #{opartorder,jdbcType=VARCHAR}, #{oaddress,jdbcType=VARCHAR}, 
      #{ologinname,jdbcType=VARCHAR}, #{oremark,jdbcType=VARCHAR}, #{cname,jdbcType=VARCHAR}, 
      #{cphone,jdbcType=VARCHAR}, #{caddress,jdbcType=VARCHAR})
  </insert>
  <update id="updateOrders" parameterType="com.qn.furnitue.model.Orders">
    update orders set
    oid=#{oid},oname=#{oname},odealer=#{odealer},odealer=#{odealer},ophone=#{ophone},odeliverytime=#{odeliverytime},
    opartorder=#{opartorder},oaddress=#{oaddress},oremark=#{oremark},cname=#{cname},cphone=#{cphone},caddress=#{caddress} where coid=#{coid}
  </update>
  <delete id="deleteOrders" parameterType="com.qn.furnitue.model.Orders">
    delete from orders
    where oid=#{oid}
  </delete>
  <select id="queryOredesPager" resultType="com.qn.furnitue.model.Orders"
          parameterType="com.qn.furnitue.model.Orders">
    select distinct o.coid,o.oid,o.oname,o.odealer,o.ophone,o.ordertime,o.odeliverytime,o.opartorder,o.oaddress,o.oremark,o.cname,o.cphone,o.caddress from orders o
    inner join user u
    on o.ologinname=u.uloginname
    where 1=1
    <if test="null!=oid and ''!=oid">
      and oid=#{oid}
    </if>
    <if test="null!=oname and ''!=oname">
      and oname=#{oname}
    </if>
    <if test="null!=odealer and ''!=odealer">
      and odealer=#{odealer}
    </if>
    and ologinname=#{ologinname}
    order by coid DESC
  </select>
  <select id="queryOrdesUser" resultType="com.qn.furnitue.model.Orders"
          parameterType="com.qn.furnitue.model.Orders">
    select oid from orders
  </select>

</mapper>